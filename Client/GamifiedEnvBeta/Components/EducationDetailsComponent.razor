@* @inject HttpClient http
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@inject State State

<style>

    .add-button-div {
        width: 90%;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        max-width: 550px;
    }

</style>


            <EducationFormComponent />
            <center>
                <div class="add-button-div" style="margin-top:20px">
                    <button class="btn btn-primary btn-sm" @onclick="addNewDiv">Add</button>
                </div><br />
                @* Displays all form components saved in the the forms list *@
                @* @for (int i = 0; i < forms.Count; ++i)
                {
                    @forms[i];
                    <div class="add-button-div" style="margin-top:20px">
                        <button class="btn btn-primary btn-sm mr-1" @onclick="addNewDiv">Add</button>
                        <button class="btn btn-danger btn-sm ml-1" @onclick="(()=>removeDiv(i-1))">Remove</button>
                    </div><br />

                }
            </center> *@

           
@* 
@code{

    
    protected override async void OnAfterRender(bool firstRender)
    {
        await JS.InvokeVoidAsync("educationalForm");
        base.OnAfterRender(firstRender);
    }

}  *@